---
import "@/styles/global.css";
import Header from "@/components/Header.astro";

interface Props {
  title: string;
  description?: string;
}

const { title, description } = Astro.props;
---

<!doctype html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    {description && <meta name="description" content={description} />}
    <meta name="viewport" content="width=device-width" />
    <meta name="generator" content={Astro.generator} />
    <script is:inline>
      // This code is inlined in the head to make dark mode instant & blocking.
      const getThemePreference = () => {
        if (
          typeof localStorage !== "undefined" &&
          localStorage.getItem("theme")
        ) {
          return localStorage.getItem("theme");
        }
        return window.matchMedia("(prefers-color-scheme: dark)").matches
          ? "dark"
          : "light";
      };
      const isDark = getThemePreference() === "dark";
      document.documentElement.classList[isDark ? "add" : "remove"](
        "theme-dark"
      );

      if (typeof localStorage !== "undefined") {
        // Watch the document element and persist user preference when it changes.
        const observer = new MutationObserver(() => {
          const isDark =
            document.documentElement.classList.contains("theme-dark");
          localStorage.setItem("theme", isDark ? "dark" : "light");
        });
        observer.observe(document.documentElement, {
          attributes: true,
          attributeFilter: ["class"],
        });
      }
    </script>
    <title>{title}</title>
  </head>
  <body>
    <Header />
    <slot />
  </body>
</html>
